parameters:
  - name: service_connection
  - name: resource_group_name
  - name: workspace_name
  - name: dataset_name
  - name: pipeline_artifact_name

jobs:
  - job:
    displayName: Integration test (score)

    variables:
      - template: ../variables.yml
      - name: integration_test_script
        value: tests.integration.score_pipeline_test
      - name: pipeline_metadata_file_path
        value: $(System.ArtifactsDirectory)/${{ parameters.pipeline_artifact_name }}/pipeline.json

    steps:
      - task: CmdLine@2
        displayName: Create anaconda environment
        inputs:
          script: |
            echo "##vso[task.prependpath]$CONDA/bin"
            conda env create --file $(dependencies_ci_cd)

      - task: DownloadBuildArtifacts@0
        displayName: Download pipeline metadata artifact
        inputs:
          artifactName: ${{ parameters.pipeline_artifact_name }}

      - task: AzureCLI@2
        displayName: Set subscription
        inputs:
          azureSubscription: $(service_connection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            # Fail on error
            set -e

            # Get subscription id
            SUBSCRIPTION_ID=$(az account show --query id -o tsv)

            # Set variable for pipeline
            echo "##vso[task.setvariable variable=subscription_id]$SUBSCRIPTION_ID"

      - task: AzureCLI@2
        displayName: Set pipeline name
        inputs:
          azureSubscription: $(service_connection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            # Fail on error
            set -e

            # Get subscription id
            PIPELINE_NAME=$(cat $(pipeline_metadata_file_path) | jq ".name" --raw-output)

            # Set variable for pipeline
            echo "##vso[task.setvariable variable=pipeline_name]$PIPELINE_NAME"

      - task: AzureCLI@2
        displayName: Run test
        inputs:
          azureSubscription: $(service_connection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            # Activate conda environment
            source activate ci_env

            # Run script to publish pipeline
            python3 -m $(integration_test_script) \
            --subscription_id $(subscription_id) \
            --resource_group $(resource_group_name) \
            --workspace_name $(workspace_name) \
            --pipeline_name $(pipeline_name) \
            --dataset_name ${{ parameters.dataset_name }} \
            --build_id $(Build.BuildId) \
